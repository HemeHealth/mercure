version: "3.9"
services:
  ui:
    depends_on:
      db:
        condition: service_healthy
    image: yarranyu/mercure-ui
    ports:
      - "8000:8000"
    volumes:
      - mercure-config:/home/mercure/mercure/configuration
      - mercure-data:/home/mercure/mercure-data
      - /var/run/docker.sock:/var/run/docker.sock

  db:
    image: library/postgres:alpine
    env_file:
      - /opt/mercure/config/db.env
    environment:
      POSTGRES_USER: mercure
      POSTGRES_DB: mercure
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "15432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U mercure" ]

  receiver:
    image: yarranyu/mercure-receiver
    depends_on:
      bookkeeper:
        condition: service_healthy
    ports:
      - "104:104"
    volumes:
      - mercure-config:/home/mercure/mercure/configuration
      - mercure-data:/home/mercure/mercure-data

  cleaner:
    image: yarranyu/mercure-cleaner
    depends_on:
      bookkeeper:
        condition: service_healthy
    volumes:
      - mercure-config:/home/mercure/mercure/configuration
      - mercure-data:/home/mercure/mercure-data

  dispatcher:
    image: yarranyu/mercure-dispatcher
    depends_on:
      bookkeeper:
        condition: service_healthy
    volumes:
      - mercure-config:/home/mercure/mercure/configuration
      - mercure-data:/home/mercure/mercure-data

  processor:
    image: yarranyu/mercure-processor
    depends_on:
      bookkeeper:
        condition: service_healthy
    volumes:
      - mercure-config:/home/mercure/mercure/configuration
      - mercure-data:/home/mercure/mercure-data
      - /var/run/docker.sock:/var/run/docker.sock

  router:
    image: yarranyu/mercure-router
    depends_on:
      bookkeeper:
        condition: service_healthy
    volumes:
      - mercure-config:/home/mercure/mercure/configuration
      - mercure-data:/home/mercure/mercure-data

  bookkeeper:
    image: yarranyu/mercure-bookkeeper
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - mercure-config:/home/mercure/mercure/configuration
      - mercure-data:/home/mercure/mercure-data

volumes:
  db-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/opt/mercure/db'

  mercure-data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/opt/mercure/data'

  mercure-config:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '/opt/mercure/config'